"""empty message

Revision ID: 49380ad07c88
Revises: 0031_add_manage_team_permission
Create Date: 2016-03-01 17:08:12.184393

"""

# revision identifiers, used by Alembic.
revision = '49380ad07c88'
down_revision = '0031_add_manage_team_permission'

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    permissions = conn.execute("SELECT (id, permission) FROM permissions").fetchall()
    print(permissions)
    op.drop_column('permissions', 'permission')
    op.drop_constraint('uix_service_user_permission', 'permissions', type_='unique')
    op.add_column('permissions', sa.Column('permission', sa.Enum('manage_service', 'send_messages', 'manage_api_keys', 'manage_templates', 'manage_team', 'view_activity', name='permission_types'), nullable=False))
    for p in permissions:
    	conn.execute("UPDATE permissions SET permission='{}' WHERE ID='{}'".format(p[1], p[0]))
    op.create_unique_constraint('uix_service_user_permission', 'permissions', ['service_id', 'user_id', '_permission'])
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    permissions = conn.execute("SELECT (id, permission) FROM permissions").fetchall()
    op.drop_column('permissions', 'permission')
    op.drop_constraint('uix_service_user_permission', 'permissions', type_='unique')
    op.add_column('permissions', sa.Column('permission', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    for p in permissions:
    	conn.execute("UPDATE permissions SET permission='{}' WHERE ID='{}'".format(p[1], p[0]))
    op.create_unique_constraint('uix_service_user_permission', 'permissions', ['service_id', 'user_id', 'permission'])
    ### end Alembic commands ###
